#!/bin/bash

# Tests all files in ./tests/ and output whether we accept it or not
# Extra arguments are passed to our compiler (such as --plain for less colors)

mkdir -p build
ghc Main.hs -outputdir build/ -o build/splang -O || exit 1

rm -f run_tests.log

echo "Parsing tests"
for f in ./tests/parser/*.spl
do
	echo "*** Parsing $f" >> run_tests.log
	./build/splang --parse-only "$@" $f >> run_tests.log

	if [ $? -ne 0 ]; then
		echo -e "\033[31m$f failed parsing\033[0m"
	else
		echo -e "\033[32m$f succeeded parsing\033[0m"
	fi
done

echo "Scoping tests"
for f in ./tests/scoping/*.spl
do
	echo "*** Scoping $f" >> run_tests.log
	./build/splang --scope-only "$@" $f >> run_tests.log

	if [ $? -ne 0 ]; then
		echo -e "\033[31m$f failed compiling\033[0m"
	else
		echo -e "\033[32m$f succeeded compiling\033[0m"
	fi
done

echo "Typing tests"
for f in ./tests/typing/*.spl
do
	echo "*** Type checking $f" >> run_tests.log
	./build/splang "$@" $f >> run_tests.log

	if [ $? -ne 0 ]; then
		echo -e "\033[31m$f failed compiling\033[0m"
	else
		echo -e "\033[32m$f succeeded compiling\033[0m"
	fi
done
echo "See run_tests.log for the details"

ssmmachine="../ssm-nogui/build/ssm-nogui.jar"
echo "Codegen tests for SSM"
for f in ./tests/codegen/*.spl
do
	echo "*** Codegen $f" >> run_tests.log
	./build/splang $f > code.ssm

	if [ $? -ne 0 ]; then
		echo -e "\033[31m$f failed to generate code\033[0m"
	else
		echo -e "\033[32m$f succeeded generating code\033[0m"
		if [ -e $f.output ]; then
			cat $f.output > output_check.txt
			java -jar $ssmmachine code.ssm > output_ssm.txt
			diff output_check.txt output_ssm.txt
			if [ $? -ne 0 ]; then
				echo -e "\033[31m -> see diff above\033[0m"
			else
				echo -e "\033[32m -> no diff :)\033[0m"
			fi
		fi
	fi
done

echo "Codegen tests for LLVM"
for f in ./tests/codegen/*.spl
do
	echo "*** Codegen $f" >> run_tests.log
	./build/splang $f --target=llvm > code.ll

	if [ $? -ne 0 ]; then
		echo -e "\033[31m$f failed to generate code\033[0m"
	else
		echo -e "\033[32m$f succeeded generating code\033[0m"
		if [ -e $f.output ]; then
			cat $f.output > output_check.txt
			lli code.ll > output_ll.txt
			diff output_check.txt output_ll.txt
			if [ $? -ne 0 ]; then
				echo -e "\033[31m -> see diff above\033[0m"
			else
				echo -e "\033[32m -> no diff :)\033[0m"
			fi
		fi
	fi
done
echo "See run_tests.log for the details"
