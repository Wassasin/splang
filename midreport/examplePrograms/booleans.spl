//Tim  Steenvoorden (s0712663)

Int   int1  = -3;
Bool  bool1 = True;
Bool  bool2 = False;
[Int] list  = [];

Void mainfunction()
{   Int x = 0;
    someType st = null;
    x = x+10;
    if( x <10) function1(st, False);
    else function1(st, True);
}

// Some bla bla bla
Void function1 (someType st, Bool b)
{
    if (bool1 && bool2 || bool2)
        int1 = 3 - 2 + 1;
    else
        int1 = 4 * 3 / 2 % 1;
}

/* Some more 
bla bla 
bla
*/
(Bool, Int) function2 ()
{
    while ( int1 > 0 || int1 < 1 && 
            int1 <= 0 || int1 >= 1 && 
            int1 != -6)
    {
        list = int1:list;
    }
    return (!bool2, someFunction());
}

// The difference between True and true, False and false, Int and int etc. 
Void integer (int x, int bools)
{
    id = id;
    boolean = null;

}
Bool z = true;
Bool w = False;
Void boolean ()
{
Bool b= true;
b = fasle;
}
Bool z = true;
Bool w = False;
Void boolean ()
{
Bool b= true;
b = fasle;
}


